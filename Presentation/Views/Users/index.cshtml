@{
    ViewData["Title"]="Users";

    <style>
        .user-image{
            width: 2rem;
            height: 2rem;
        }
    </style>
}

<section id='users-index'>
    <table id='kt-users-table' class='table table-bordered table-striped table-hover'>
        <thead>
            <tr class="text-capitalize">
                <th>image</th>
                <th>name</th>
                <th>email</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</section>

@section Scripts {
    <script>
     var UsersIndex= Vue.createApp({
            data() {
                return {
                  users:[]
                };
            },
            methods: {
                fetchUsers(){
                    return (data,callback,seetings)=>{
                        $.ajax({
                            url:'/Users/GetAll',
                            type:'POST',
                            data: data,
                            success: (response)=>{
                                this.users = response.responseData.data;
                                console.log(this.users)
                                callback(response.responseData)
                            },
                            error: ()=>{
                            }
                        });
                    }
                },
                delete(id){
                    const user = this.users.find(u=>u.id==id);
                    Swal.fire({
                        title:'Are Your Sure?',
                        text:"You won't be able to revert this!",
                        icon:'warning',
                        showCancelButton:true,
                        confirmButtonText:'Yest, delete it!',
                        cancelButtonText:'Cancel',
                        customClass: {
                            confirmButton: 'btn btn-danger',
                            cancelButton: 'btn btn-secondary'
                        }
                    }).then(result=>{
                        if(result.isConfirmed)
                            this.deleteAsync(id);
                    });
                },
                deleteAsync(id){
                    axios.delete(`/Users/Delete?id=${id}`)
                    .then(resp=>{
                        Swal.fire('Deleted!',"User has beed deleted",'success');
                    })
                },
                navigateToEdit(id){
                    window.location.href=`/Users/Edit/${id}`;
                }
            },
            mounted() {
                $('#kt-users-table').DataTable({
                   paging:true,
                   searching:true,
                   ordering:true,
                   info:true,
                   pageLength:10,
                   columnDefs:[
                   ],
                   serverSide:true,
                   processing:true,
                   ajax: this.fetchUsers(),
                   order:[[1,'desc']],
                   columns:[
                        {
                            data:'image',
                            orderable:false,
                            render: function(data,type,row,meta){
                                return `<img src="${data}" class="img-fluid rounded-pill user-image border">`
                            }
                        },
                        {data:'name'},
                        {
                            data:'email',
                            orderable:false
                        },
                        {
                            data: null,
                            orderable:false,
                            render: function(data,type,row){
                                return `
                                   <div class="d-flex align-items-center gap-2">
                                        <button onclick="UsersIndex.navigateToEdit('${data.id}')" class="btn btn-sm btn-secondary">Edit</button>
                                        <button onclick="UsersIndex.delete('${data.id}')" class="btn btn-sm btn-danger">Delete</button>
                                   </div>
                                `;
                            }
                        }
                   ],
                   dom:'Bfrtip',
                   buttons:[
                    'csv','print',
                   {
                     text:'Add',
                     className:'btn btn-primary',
                     action:function(){
                       window.location.href='/Users/Edit';
                     },
                    init: function(api, node, config) {
                        $(node).removeClass('btn-secondary');
                    }
                   },
                   ]
                });
            }
        }).mount("#users-index");
    </script>
}